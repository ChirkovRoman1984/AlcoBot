import copy
import random
import time
import asyncio
from typing import Dict

from aiogram import types
from aiogram.utils.exceptions import MessageCantBeDeleted, MessageNotModified, MessageToDeleteNotFound

import config as cfg
from ai.sberbank import text_gen
from config import data
from database.db import db, User, Chat
from handlers.draka.weapon import weapon_drop
from create_bot import bot, rate_limit
from dialogs import msg


class PollFight:
    def __init__(self, chat_id, poll_id):
        self.voters: list = []
        self.chat_id: int = chat_id
        self.id: int = poll_id


active_polls: Dict[int, PollFight] = {}


@rate_limit(30, 'hit')
async def cmd_hit(message: types.Message):
    await hit(message) if message.reply_to_message else await fight(message)


async def fight(message: types.Message):
    try:
        await message.delete()
    except (MessageCantBeDeleted, MessageToDeleteNotFound):
        pass
    chat: Chat = data[message.chat.id]
    if chat.is_fight_now:
        await message.answer('–û–±–æ–∂–¥–∏')
        return

    imya = db.name(message.from_user, message.chat.id)
    smotrit = await message.answer(f"{imya} —Ä–∞–∑–±—É—à–µ–≤–∞–ª—Å—è! –°–º–æ—Ç—Ä–∏—Ç –∫–æ–º—É –≤—å–µ–±–∞—Ç—å...")
    options = random.sample(msg.hit, 3)
    msg_poll = await bot.send_poll(
        chat_id=message.chat.id, question=f'"{msg.title}"\n–í—ã–±–∏—Ä–∞–π –∫–∞–∫ –≤—ä–µ–±–∞—Ç—å 20 —Å–µ–∫.',
        options=options, is_anonymous=False, open_period=20
    )

    poll = PollFight(chat.id, msg_poll.poll.id)
    active_polls[poll.id] = poll

    chat.is_fight_now = msg_poll.poll.open_period

    await asyncio.sleep(20)
    await msg_poll.delete()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–±–∞–Ω–µ–Ω—ã—Ö —Å—Ä–µ–¥–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏—Ö
    msg_ban = ''
    for voter_id in list(poll.voters):
        if chat.users[voter_id].banned:
            msg_ban += f'{chat.users[voter_id].tag} ' \
                       f'–ø–æ–ª—É—á–∞–µ—Ç –µ—â–µ 2 –º–∏–Ω—É—Ç—ã –±–∞–Ω–∞ –ø–ª—é—Å–æ–º ‚ò†Ô∏è‚ò†Ô∏è‚ò†Ô∏è, —Ç–∞–∫ –∫–∞–∫ —É–∂–µ –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω\n'
            chat.users[voter_id].ban_time += cfg.time_ban
            del poll.voters[voter_id]

    if len(poll.voters) == 0:
        await smotrit.edit_text(
            f"{imya} —Ä–∞–∑–±—É—à–µ–≤–∞–ª—Å—è! –°–º–æ—Ç—Ä–∏—Ç –∫–æ–º—É –≤—å–µ–±–∞—Ç—å...\n–ù–æ –Ω–∏–∫–æ–≥–æ –Ω–µ –Ω–∞—à—ë–ª")
        if msg_ban:
            await message.answer(msg_ban)
        del active_polls[poll.id]
        return

    if len(poll.voters) == 1:
        voter_id = poll.voters[0]
        user = chat.users[voter_id]
        if user.id == message.from_user.id:
            await smotrit.edit_text(
                f"{imya} —Ä–∞–∑–±—É—à–µ–≤–∞–ª—Å—è! –°–º–æ—Ç—Ä–∏—Ç –∫–æ–º—É –≤—å–µ–±–∞—Ç—å...\n–ù–æ –Ω–∏–∫–æ–≥–æ –Ω–µ –Ω–∞—à—ë–ª")
            random_user_id = db.get_random(chat.id, message.from_user.id)
            random_user = await bot.get_chat_member(chat.id, random_user_id)
            random_user = random_user.user
            random_user = data[message.chat.id].users.get(random_user.id, User(random_user, message.chat.id))

            otv = f'–ê –ø–æ—Ç–æ–º –ø—Ä–∏–≥–ª—è–¥–µ–ª—Å—è - {random_user.name} –æ—Ç–¥—ã—Ö–∞–µ—Ç. ' \
                  f'–í–∑—è–ª, –¥–∞ {msg.pre_hit} {options[user.option]} –µ–º—É. ' \
                  f'<tg-spoiler>{user.atack}HP</tg-spoiler>'
            random_user.hp -= user.atack
            user.weapon.durability -= 1
            otv = f'{otv}\n{random_user.tag} (üí™{random_user.hp} HP)'
            if random_user.hp == 0:
                user.uebal += 1
                random_user.hp = 100
                random_user.ban_time = int(time.time()) + 2 * cfg.time_ban
                # to_ban(random_user.id, random_user.chat_id, 2 * cfg.time_ban)
                otv = f'{otv} –±–∞–Ω —Ç–µ–±–µ –Ω–∞ {round(2 * cfg.time_ban)} —Å–µ–∫—É–Ω–¥ ‚ò†Ô∏è‚ò†Ô∏è‚ò†Ô∏è\n'
            await message.answer(otv + msg_ban, parse_mode='HTML')
            if msg_ban:
                await message.answer(msg_ban)
            user.update()
            random_user.update()
            del active_polls[poll.id]
            return

    users_list = [chat.users[_id] for _id in poll.voters]

    try:
        await smotrit.delete()
    except MessageNotModified:
        return

    msg_answer = ''
    pairs = []
    while len(users_list) > 0:
        if len(users_list) == 1:
            users_list *= 2
        random_pair = [users_list.pop(random.randrange(len(users_list))) for _ in range(2)]
        pairs.append(random_pair)

    for pair in pairs:
        user1, user2 = pair
        hit1 = f'{user1.name} {msg.pre_hit} {options[user1.option]}'
        hit2 = f'{user2.name} {msg.pre_hit} {options[user2.option]}'
        if user1.id == user2.id:
            otv = f'{hit1} —Å–∞–º —Å–µ–±–µ <tg-spoiler>{user1.atack}HP</tg-spoiler>'
            user1.hp -= user1.atack
            user1.weapon.durability -= 1
        elif user1.option - user2.option in [-1, 2]:
            otv = f'{hit1} <tg-spoiler>{user1.atack}HP</tg-spoiler>, '
            if random.randint(1, 100) < 20 and user2.weapon.name != '–Ω–µ—Ç':
                weapon = copy.copy(user2.weapon)
                user2.weapon.durability = 0
                await weapon_drop(message, weapon)
                otv = otv + f'{user2.name} –ø–æ—Ç–µ—Ä—è–ª –æ—Ä—É–∂–∏–µ.'
            else:
                otv = otv + f'{user2.name} {msg.damage}'
            user2.hp -= user1.atack
            user1.weapon.durability -= 1
            if user2.hp == 0:
                user1.uebal += 1
        elif user1.option == user2.option:
            if random.randint(0, 1) == 0:
                otv = f'{hit1} <tg-spoiler>{user1.atack}HP</tg-spoiler>, '
                if random.randint(1, 100) < 20 and user2.weapon.name != '–Ω–µ—Ç':
                    weapon = copy.copy(user2.weapon)
                    user2.weapon.durability = 0
                    await weapon_drop(message, weapon)
                    otv = otv + f'{user2.name} –ø–æ—Ç–µ—Ä—è–ª –æ—Ä—É–∂–∏–µ.'
                else:
                    otv = otv + f'{user2.name} {msg.damage}'
                user2.hp -= user1.atack
                user1.weapon.durability -= 1
                if user2.hp == 0:
                    user1.uebal += 1
            else:
                otv = f'{hit2} <tg-spoiler>{user2.atack}HP</tg-spoiler>, '
                if random.randint(1, 100) < 20 and user1.weapon.name != '–Ω–µ—Ç':
                    weapon = copy.copy(user1.weapon)
                    user1.weapon.durability = 0
                    await weapon_drop(message, weapon)
                    otv = otv + f'{user1.name} –ø–æ—Ç–µ—Ä—è–ª –æ—Ä—É–∂–∏–µ.'
                else:
                    otv = otv + f'{user1.name} {msg.damage}'
                user1.hp -= user2.atack
                user2.weapon.durability -= 1
                if user1.hp == 0:
                    user2.uebal += 1
        else:
            otv = f'{hit2} <tg-spoiler>{user2.atack}HP</tg-spoiler>, '
            if random.randint(1, 100) < 20 and user1.weapon.name != '–Ω–µ—Ç':
                weapon = copy.copy(user1.weapon)
                user1.weapon.durability = 0
                await weapon_drop(message, weapon)
                otv = otv + f'{user1.name} –ø–æ—Ç–µ—Ä—è–ª –æ—Ä—É–∂–∏–µ.'
            else:
                otv = otv + f'{user1.name} {msg.damage}'
            user1.hp -= user2.atack
            user2.weapon.durability -= 1
            if user1.hp == 0:
                user2.uebal += 1
        msg_answer = msg_answer + otv + "\n"
        user1.update()
        user2.update()

    await message.answer(msg_answer, parse_mode='HTML')

    # users_dict = active_polls[poll.id].voters
    msg_answer = ''
    for voter_id in poll.voters:
        user = chat.users[voter_id]
        otv = f'{user.tag} (üí™{user.hp} HP)'
        if user.hp == 0:
            user.hp = 100
            user.ban_time = int(time.time()) + 2 * cfg.time_ban
            user.update()
            otv = f'{otv} –±–∞–Ω —Ç–µ–±–µ –Ω–∞ {round(2*cfg.time_ban)} —Å–µ–∫—É–Ω–¥ ‚ò†Ô∏è‚ò†Ô∏è‚ò†Ô∏è'
        msg_answer = msg_answer + otv + '\n'
    msg_answer += msg_ban
    await message.answer(msg_answer, parse_mode="HTML")

    del active_polls[poll.id]

    # res = (1200, 800)
    # pygame.init()
    # surface = pygame.Surface(res)
    # f1 = pygame.font.Font('c:/windows/fonts/Tahoma.ttf', 20)
    # kadr = 1
    # surface.fill(pygame.Color('white'))
    # image = pygame.image.load(f'alco_png/1/{random.randint(1, 5)}.png')
    # surface.blit(image, (0, 0))
    # image = pygame.image.load(f'alco_png/2/{random.randint(1, 5)}.png')
    # surface.blit(image, (0, 0))
    # image = pygame.image.load(f'alco_png/3/{random.randint(1, 5)}.png')
    # surface.blit(image, (0, 0))
    # text = f1.render(f'{name(key, message.chat.id)}', True, 'black')
    # surface.blit(text, (600 - text.get_rect().centerx, 700))
    # filename = f'gifs/1/{kadr:3}.png'
    # pygame.image.save(surface, filename)
    # kadr += 1
    # pygame.draw.rect(surface, 'white', (0, 700, 1200, 800))
    # for event in pygame.event.get():
    #     if event.type == pygame.QUIT:
    #         pygame.quit()

    #     text1 = f1.render(f'{otv}', True, 'black')
    #     text_size = f1.size(f'{otv}')
    #     surface.blit(text1, (600 - text_size[0] // 2, 700))
    #     filename = f'gifs/1/{kadr:3}.png'
    #     pygame.image.save(surface, filename)
    #     kadr += 1
    # pygame.quit()


async def hit(message: types.Message):
    if message.reply_to_message.from_user.is_bot:
        await message.reply('–°–∞–º —Å–µ–±–µ —É–µ–±–∏, –ø—Ä–∏–¥—É—Ä–æ–∫')
        return

    elif message.from_user.id == message.reply_to_message.from_user.id:
        await message.reply('–¢—ã —á—ë? –†–µ—à–∏–ª —Å–∞–º —Å–µ–±–µ —É–µ–±–∞—Ç—å? –î–∞–≤–∞–π –Ω–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ. –ë–∞–Ω —Ç–µ–±–µ –Ω–∞ 2 –º–∏–Ω—É—Ç—ã')
        user: User = data[message.chat.id].users.get(message.from_user.id, User(message.from_user, message.chat.id))
        user.ban_time = int(time.time()) + cfg.time_ban

    else:
        markup = types.InlineKeyboardMarkup(row_width=2)
        btn1 = types.InlineKeyboardButton("–î–∞–≤–∞–π!", callback_data='hit - –¥–∞')
        btn2 = types.InlineKeyboardButton("–ü—É—Å—Ç—å –∂–∏–≤—ë—Ç", callback_data='hit - –Ω–µ—Ç')
        btn3 = types.InlineKeyboardButton('–ù–∞–ª–∏—Ç—å –µ–º—É –∏ —Å–µ–±–µ –ø–æ 100 –≥—Ä–∞–º–º', callback_data='hit - –Ω–∞–ª–∏—Ç—å')
        btn4 = types.InlineKeyboardButton('–°–∏–ª—å–Ω–æ —É–µ–±–∞—Ç—å', callback_data='hit - —Å–∏–ª—å–Ω–æ —É–µ–±–∞—Ç—å')
        markup.add(btn1, btn2, btn3)
        markup.add(btn4)
        await message.reply_to_message.reply("–ü–æ –µ–±–∞–ª—É –∑–∞ —Ç–∞–∫–∏–µ —Å–ª–æ–≤–∞!", reply_markup=markup)
        try:
            await message.bot.delete_message(message.chat.id, message.message_id)
        except MessageCantBeDeleted:
            pass


async def change_uebal(message: types.Message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    item1 = types.InlineKeyboardButton("–î–∞–≤–∞–π!", callback_data='hit - –¥–∞')
    item2 = types.InlineKeyboardButton("–ö–æ–Ω–µ—á–Ω–æ", callback_data='hit - –¥–∞')
    item3 = types.InlineKeyboardButton('–ù–∞–ª–∏—Ç—å –µ–º—É –∏ —Å–µ–±–µ –ø–æ 100 –≥—Ä–∞–º–º', callback_data='hit - –Ω–∞–ª–∏—Ç—å')
    markup.add(item1, item2, item3)
    await message.edit_text("–£–µ–±–∞—Ç—å –±—ã —Ç–µ–±–µ –∑–∞ —Ç–∞–∫–æ–µ. –ú–æ–∂–µ—Ç –∫—Ç–æ –ø–æ–º–æ–∂–µ—Ç?", reply_markup=markup)


async def handle_poll_answer(answer: types.PollAnswer):
    if answer.option_ids:
        poll = active_polls[answer.poll_id]
        user = data[poll.chat_id].users.get(answer.user.id, User(answer.user, poll.chat_id))
        if answer.user.id not in poll.voters:
            user.option = answer.option_ids[0]
            poll.voters.append(answer.user.id)


async def callback_inline_hit(call: types.CallbackQuery):

    chat_id = call.message.chat.id

    if call.from_user.id == call.message.reply_to_message.from_user.id and call.data == 'hit - –Ω–µ—Ç':
        user: User = data[chat_id].users.get(call.from_user.id, User(call.from_user, chat_id))
        await change_uebal(call.message)
        await bot.send_message(
            chat_id=chat_id,
            text=f"{user.name}, –Ω–µ —Ç–µ–±–µ —Ä–µ—à–∞—Ç—å, —É–µ–±–∞—Ç—å —Ç–µ–±–µ –∏–ª–∏ –Ω–µ—Ç üòäüòäüòä")
        return

    try:
        await call.message.delete()
    except MessageCantBeDeleted:
        pass

    # –µ—Å–ª–∏ –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
    if call.from_user.id == call.message.reply_to_message.from_user.id:

        user: User = data[chat_id].users.get(call.from_user.id, User(call.from_user, chat_id))

        if call.data == 'hit - –¥–∞':
            user.ban_time = int(time.time()) + cfg.time_ban
            user.hp -= user.atack
            await call.message.reply_to_message.reply(
                f"{user.name} —É–µ–±–∞–ª —Å–∞–º —Å–µ–±–µ. –ö–∞–∫ –æ–Ω —Ç–æ–ª—å–∫–æ —É–º—É–¥—Ä–∏–ª—Å—è? "
                f"–ë–∞–Ω –Ω–∞ {cfg.time_ban} —Å–µ–∫—É–Ω–¥ –∏ –º–∏–Ω—É—Å {user.atack} HP"
            )
            if user.hp == 0:
                user.hp = 1
                await bot.send_message(chat_id=chat_id, text='–û—Å—Ç–∞–≤–ª—é —Ç–µ–±–µ 1 HP, –¥—É–º–∞–π —Å–∞–º —á—Ç–æ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å')

        elif call.data == 'hit - —Å–∏–ª—å–Ω–æ —É–µ–±–∞—Ç—å':
            user.ban_time = int(time.time()) + cfg.time_ban * 2
            user.hp -= user.atack * 2
            await call.message.reply_to_message.reply(
                f"{user.name} –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ —É–µ–±–∞–ª —Å–∞–º —Å–µ–±–µ. –õ—É—á—à–µ –±—ã –≤–æ–¥–∫—É –ø–∏–ª. "
                f"–ë–∞–Ω –Ω–∞ {cfg.time_ban * 2} —Å–µ–∫—É–Ω–¥ –∏ –º–∏–Ω—É—Å {user.atack * 2} HP"
            )
            if user.hp == 0:
                user.hp = 1
                await bot.send_message(chat_id=chat_id, text='–û—Å—Ç–∞–≤–ª—é —Ç–µ–±–µ 1 HP, –¥—É–º–∞–π —Å–∞–º —á—Ç–æ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å')

        elif call.data == 'hit - –Ω–∞–ª–∏—Ç—å':
            user.ban_time = int(time.time()) + cfg.time_ban
            user.hp -= 10
            await call.message.reply_to_message.reply(
                f"{user.name} –Ω–∞–ª–∏–ª —Å–µ–±–µ 2 –ø–æ 100. –ë–∞–Ω –µ–º—É –Ω–∞ 2 –º–∏–Ω—É—Ç—ã!\n–ú–∏–Ω—É—Å 10 HP, –∏–±–æ –Ω–µ—Ö–µ—Ä –±—É—Ö–∞—Ç—å")
            if user.hp == 0:
                user.hp = 1
                await bot.send_message(
                    chat_id=chat_id,
                    text='–ë–∞—Ç—é—à–∫–∏, –¥–∞ —Ç—ã —Å–¥–æ—Ö –æ—Ç –∞–ª–∫–∞—à–∫–∏. –ù–æ 1 HP —è —Ç–µ–±–µ –æ—Å—Ç–∞–≤–ª—é')
        user.update()

    else:
        # –ù–∞–∂–∞–≤—à–∏–π –Ω–∞ –∫–Ω–æ–ø–∫—É
        user1: User = data[chat_id].users.get(call.from_user.id, User(call.from_user, chat_id))
        # –ê–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
        user2: User = data[chat_id].users.get(
            call.message.reply_to_message.from_user.id, User(call.message.reply_to_message.from_user, chat_id))

        if call.data == 'hit - –¥–∞':
            if random.randint(1, 2) == 1:
                user1.weapon.durability -= 1
                user2.hp -= user1.atack

                txt = f"{user1.name} {random.choice(msg.hit_low)}. "
                otvet = text_gen.simple_generate(
                    txt+"–ß—Ç–æ–±—ã ",
                    temperature=1.6,
                    max_length=48,
                    length_penalty=-0.5
                )
                otvet = f"{otvet}\n{user2.name} –ø–æ–ª—É—á–∏–ª –º–∏–Ω—É—Å {user1.atack} HP"
                if user2.hp == 0:
                    user2.hp = 100
                    user1.uebal += 1
                    user2.ban_time = int(time.time()) + cfg.time_ban * 0.5
                    otvet = f"{otvet} –∏ —Å–¥–æ—Ö. –ë–∞–Ω –µ–º—É –Ω–∞ {cfg.time_ban * 0.5:.0f} —Å–µ–∫—É–Ω–¥"
                await call.message.reply_to_message.reply(otvet)

            else:
                user1.hp -= user2.atack
                user2.weapon.durability -= 1
                otvet = f"{user1.name} –ø–æ–ø—ã—Ç–∞–ª—Å—è —ë–±–Ω—É—Ç—å —Ç–µ–±–µ, –Ω–æ –Ω–µ –ø–æ–ø–∞–ª! " \
                        f"{user2.name} —É–µ–±–∞–ª –≤ –æ—Ç–≤–µ—Ç –Ω–∞ {user2.atack} HP"
                if user1.hp == 0:
                    user1.hp = 100
                    user2.uebal += 1
                    otvet = f'{otvet}\n{user1.name}, —Ç—ã —Å–¥–æ—Ö. –ë–∞–Ω —Ç–µ–±–µ –Ω–∞ {cfg.time_ban * 0.5:.0f} —Å–µ–∫—É–Ω–¥'
                    user1.ban_time = int(time.time()) + cfg.time_ban * 0.5
                await call.message.reply_to_message.reply(otvet)

        elif call.data == 'hit - –Ω–µ—Ç':
            await call.message.reply_to_message.reply("–•–æ—Ç–µ–ª–∏ –≤—Ä–æ–¥–µ –¥–∞—Ç—å –ø–æ –µ–±–∞–ª—É, –Ω–æ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏")

        elif call.data == 'hit - –Ω–∞–ª–∏—Ç—å':
            user1.ban_time = int(time.time()) + cfg.time_ban * 0.5
            user2.ban_time = int(time.time()) + cfg.time_ban * 0.5
            await call.message.reply_to_message.reply(
                f"{user1.name} —Ä–∞–∑–ª–∏–ª –ø–æ 100 –≥—Ä–∞–º–º. "
                f"{user2.name} –ø–æ–¥–¥–µ—Ä–∂–∞–ª. –ò –æ–±–∞ —É—à–ª–∏ –≤ –∑–∞–ø–æ–π (–≤ –±–∞–Ω) –Ω–∞ {cfg.time_ban * 0.5:.0f} —Å–µ–∫—É–Ω–¥!"
                f"\n–ú–∏–Ω—É—Å 10 HP –æ–±–æ–∏–º. –ü–∏—Ç—å –≤—Ä–µ–¥–Ω–æ"
            )
            user1.hp -= 10
            if user1.hp == 0:
                user1.hp = 1
                await bot.send_message(
                    chat_id=chat_id,
                    text=f'–ë–∞—Ç—é—à–∫–∏, {user1.name} –¥–∞ —Ç—ã —Å–¥–æ—Ö –æ—Ç –∞–ª–∫–∞—à–∫–∏. 1 HP —É —Ç–µ–±—è —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç')

            user2.hp -= 10
            if user2.hp == 0:
                user2.hp = 1
                await bot.send_message(
                    chat_id=chat_id,
                    text=f'–ë–∞—Ç—é—à–∫–∏, {user2.name} –¥–∞ —Ç—ã —Å–¥–æ—Ö –æ—Ç –∞–ª–∫–∞—à–∫–∏. 1 HP —É —Ç–µ–±—è —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç')

        elif call.data == 'hit - —Å–∏–ª—å–Ω–æ —É–µ–±–∞—Ç—å':
            if random.randint(1, 4) == 1:
                user1.weapon.durability -= 2
                user2.hp -= user1.atack * 2

                otvet = f"{user1.name} –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ —É–µ–±–∞–ª –∑–∞ —Ç–∞–∫–∏–µ —Å–ª–æ–≤–∞! \n" \
                        f"{user2.name} –ø–æ–ª—É—á–∏–ª –º–∏–Ω—É—Å {user1.atack * 2} HP"
                if user2.hp == 0:
                    user2.hp = 100
                    user1.uebal += 1
                    user2.ban_time = int(time.time()) + cfg.time_ban
                    otvet = f'{otvet} –∏ —Å–¥–æ—Ö. –ë–∞–Ω –µ–º—É –Ω–∞ {cfg.time_ban:.0f} —Å–µ–∫—É–Ω–¥'
                await call.message.reply_to_message.reply(otvet)
            else:
                user2.weapon.durability -= 1
                user1.hp -= user2.atack

                otvet = f"{user1.name} —Å–∏–ª—å–Ω–æ –∑–∞–º–∞—Ö–Ω—É–ª—Å—è, –Ω–æ –∑–∞–±—ã–ª –Ω–∞—Ö—É—è! \n" \
                        f"–ü–æ–ª—É—á–∏–ª –≤ –æ—Ç–≤–µ—Ç –ø–æ –º–æ—Ä–¥–µ, –º–∏–Ω—É—Å {user2.atack} HP"
                if user1.hp == 0:
                    user1.hp = 1
                    user1.ban_time = int(time.time()) + cfg.time_ban
                    user2.uebal += 1
                    otvet = f'{otvet}  –∏ —Å–¥–æ—Ö. –ù–æ 1 HP —è –µ–º—É –æ—Å—Ç–∞–≤–ª—é. –ë–∞–Ω –µ–º—É –Ω–∞ {cfg.time_ban:.0f} —Å–µ–∫—É–Ω–¥'
                await call.message.reply_to_message.reply(otvet)
        user1.update()
        user2.update()
